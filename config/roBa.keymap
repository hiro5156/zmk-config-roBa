#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        CornerBrackets: CornerBrackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp ENTER &kp LEFT_ARROW>;
            label = "CORNERBRACKETS";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C) &kp RIGHT_ARROW>;
            label = "COPY";
        };

        AllCopy: AllCopy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(A) &kp LG(C) &kp RIGHT_ARROW>;
            label = "ALLCOPY";
        };

        Copywin: Copywin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp RIGHT_ARROW>;
            label = "COPYWIN";
        };

        braketfree: braketfree {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET>;
            label = "BRAKETFREE";
        };

        PA: PA {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp ENTER>;
            label = "PA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 4 Q           &kp W         &kp E         &kp R        &kp T                                             &kp Y          &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F        &kp G        &kp K_MUTE           &kp PIPE        &kp H          &kp J  &kp K      &kp L    &kp SQT
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V        &kp B        &CornerBrackets      &braketfree     &kp N          &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 2 ENTER  &lt 3 SPACE  &lt 1 CAPSLOCK       &lt 1 CAPSLOCK  &kp BACKSPACE                             &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        FUNCTION {
            bindings = <
&kp LG(A)      &AllCopy   &trans     &trans    &trans                                   &trans        &kp EXCLAMATION  &kp UP_ARROW    &PA              &kp SEMICOLON
&kp LG(Z)      &kp LG(X)  &kp LG(V)  &copy     &kp LG(S)         &trans         &trans  &kp MINUS     &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp HASH
&kp LC(Z)      &kp LC(X)  &kp LC(V)  &Copywin  &kp LC(S)         &kp LG(A)      &trans  &kp QUESTION  &kp COLON        &kp AT_SIGN     &kp AMPERSAND    &kp CARET
&kp LA(LG(C))  &kp LG(V)  &trans     &kp F9    &kp INT_MUHENKAN  &kp F10        &trans  &trans                                                          &kp PRCNT
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp KP_MINUS     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp KP_SLASH     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ASTERISK
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp BACKSPACE                                                       &kp ENTER
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                              &trans            &msc MOVE_Y(-10)  &msc SCRL_UP    &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans      &msc SCRL_LEFT  &msc MOVE_X(-10)  &mkp LCLK         &mkp RCLK       &msc MOVE_X(10)  &msc SCRL_RIGHT
&trans  &trans  &trans  &trans  &trans  &trans      &trans          &trans            &msc MOVE_Y(10)   &msc SCRL_DOWN  &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans          &trans                                                               &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
