#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        pass: pass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp ENTER>;
            label = "PASS";
        };

        CornerBrackets: CornerBrackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp ENTER &kp LEFT_ARROW>;
            label = "CORNERBRACKETS";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C) &kp RIGHT_ARROW>;
            label = "COPY";
        };

        AllCopy: AllCopy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(A) &kp LG(C) &kp RIGHT_ARROW>;
            label = "ALLCOPY";
        };

        Copywin: Copywin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp RIGHT_ARROW>;
            label = "COPYWIN";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 4 Q           &kp W         &kp E         &kp R                        &kp T                                         &kp Y          &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                        &kp G        &kp K_MUTE       &kp MINUS       &kp H          &kp J  &kp K      &kp L    &kp SQT
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp B        &kp COLON        &kp SEMICOLON   &kp N          &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 3 INT_HENKAN  &lt 3 SPACE  &lt 1 LANG6      &lt 1 INT_KANA  &kp BACKSPACE                             &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans     &trans  &trans                                 &trans        &kp EXCLAMATION  &kp UP_ARROW    &trans           &pass
&trans  &trans  &kp LG(V)  &copy   &trans            &trans       &trans  &kp MINUS     &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans  &trans     &trans  &trans            &trans       &trans  &kp QUESTION  &trans           &trans          &trans           &trans
&trans  &trans  &trans     &kp F9  &kp INT_MUHENKAN  &kp F10      &trans  &trans                                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp KP_MINUS     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp KP_SLASH     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ASTERISK
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp BACKSPACE                                                       &kp ENTER
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                               &trans          &trans     &trans     &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans      &msc MOVE_Y(10)  &msc MOVE_Y(5)  &mkp LCLK  &mkp RCLK  &msc MOVE_X(5)  &msc MOVE_X(10)
&trans  &trans  &trans  &trans  &trans  &trans      &trans           &trans          &trans     &trans     &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans           &trans                                                &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
