#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        CornerBrackets: CornerBrackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp ENTER &kp LEFT_ARROW>;
            label = "CORNERBRACKETS";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C) &kp RIGHT_ARROW>;
            label = "COPY";
        };

        AllCopy: AllCopy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(A) &kp LG(C) &kp RIGHT_ARROW>;
            label = "ALLCOPY";
        };

        Copywin: Copywin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C) &kp RIGHT_ARROW>;
            label = "COPYWIN";
        };

        braketfree: braketfree {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET>;
            label = "BRAKETFREE";
        };

        PA: PA {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp ENTER>;
            label = "PA";
        };

        bt0: bt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 0 &tog_off 1 &tog_off 2>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 0>,
                <&macro_wait_time 500>;

            label = "BT0";
        };

        bt1: bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 0 &tog_off 1 &tog_off 2>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 2>,
                <&macro_wait_time 500>;

            label = "BT1";
        };

        bt2: bt2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 0 &tog_off 1 &tog_off 2>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 500>;

            label = "BT2";
        };
    };

    behaviors {
        /* ここで to_layer_0 を定義 */

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAC_default {
            bindings = <
&kp Q             &kp W         &kp E         &kp R        &kp T                                             &kp Y          &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F        &kp G        &kp K_MUTE           &kp PIPE        &kp H          &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V        &kp B        &CornerBrackets      &braketfree     &kp N          &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &lt 9 ENTER  &lt 4 SPACE  &lt 3 CAPSLOCK       &lt 3 CAPSLOCK  &kp BACKSPACE                             &lt 10 APOS
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        iPad_default {
            bindings = <
&kp Q             &kp W         &kp E         &kp R        &kp T                                             &kp Y          &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F        &kp G        &kp K_MUTE           &kp PIPE        &kp H          &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V        &kp B        &CornerBrackets      &braketfree     &kp N          &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &lt 9 ENTER  &lt 6 SPACE  &lt 5 CAPSLOCK       &lt 5 CAPSLOCK  &kp BACKSPACE                             &lt 10 APOS
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        WIN_default {
            bindings = <
&kp Q             &kp W         &kp E         &kp R        &kp T                                             &kp Y          &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F        &kp G        &kp K_MUTE           &kp PIPE        &kp H          &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V        &kp B        &CornerBrackets      &braketfree     &kp N          &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &lt 9 ENTER  &lt 8 SPACE  &lt 7 CAPSLOCK       &lt 7 CAPSLOCK  &kp BACKSPACE                             &lt 10 APOS
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        MAC_Function {
            bindings = <
&kp LG(A)           &AllCopy   &none          &none   &none                                      &none         &kp EXCLAMATION  &kp UP_ARROW    &PA              &kp SEMICOLON
&kp LG(Z)           &kp LG(X)  &kp LG(V)      &copy   &kp LG(S)  &none        &none              &kp MINUS     &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp HASH
&kp LC(LEFT_SHIFT)  &none      &none          &none   &none      &none        &kp DOUBLE_QUOTES  &kp QUESTION  &kp COLON        &kp AT_SIGN     &kp AMPERSAND    &kp CARET
&none               &kp F9     &kp LA(LG(C))  &kp F6  &kp F7     &kp F10      &trans             &trans                                                          &kp PRCNT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        MAC_Mouse {
            bindings = <
&none           &none           &msc SCRL_DOWN  &none            &none                    &none     &kp HOME     &kp END        &none     &none
&none           &msc SCRL_LEFT  &msc SCRL_UP    &msc SCRL_RIGHT  &none  &none      &none  &mkp MB4  &mkp LCLK    &mkp RCLK      &mkp MB5  &none
&kp LEFT_SHIFT  &none           &none           &none            &none  &none      &none  &none     &kp PAGE_UP  &kp PAGE_DOWN  &none     &none
&none           &none           &none           &none            &none  &none      &none  &none                                           &none
            >;
        };

        iPad_Function {
            bindings = <
&kp LG(A)           &AllCopy   &none          &none   &none                                      &none         &kp EXCLAMATION  &kp UP_ARROW    &PA              &kp SEMICOLON
&kp LG(Z)           &kp LG(X)  &kp LG(V)      &copy   &kp LG(S)  &none        &none              &kp MINUS     &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp HASH
&kp LC(LEFT_SHIFT)  &none      &none          &none   &none      &none        &kp DOUBLE_QUOTES  &kp QUESTION  &kp COLON        &kp AT_SIGN     &kp AMPERSAND    &kp CARET
&none               &none      &kp LA(LG(C))  &kp F9  &kp F7     &kp F10      &trans             &trans                                                          &kp PRCNT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        iPad_mouse {
            bindings = <
&none           &none           &msc SCRL_DOWN  &none            &none                    &none          &kp HOME     &kp END    &none     &none
&none           &msc SCRL_LEFT  &msc SCRL_UP    &msc SCRL_RIGHT  &none  &none      &none  &mkp MB4       &mkp LCLK    &mkp RCLK  &mkp MB5  &none
&kp LEFT_SHIFT  &none           &none           &none            &none  &none      &none  &kp LG(LA(D))  &kp LG(TAB)  &kp LG(H)  &none     &none
&none           &none           &none           &none            &none  &none      &none  &none                                            &none
            >;
        };

        WIN_Function {
            bindings = <
&kp LC(A)           &AllCopy   &none      &none     &none                                      &none         &kp EXCLAMATION  &kp UP_ARROW    &PA              &kp SEMICOLON
&kp RC(Z)           &kp LC(X)  &kp LC(V)  &Copywin  &kp LC(S)  &none        &none              &kp MINUS     &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp HASH
&kp LC(LEFT_SHIFT)  &none      &none      &none     &none      &none        &kp DOUBLE_QUOTES  &kp QUESTION  &kp COLON        &kp AT_SIGN     &kp AMPERSAND    &kp CARET
&none               &kp F9     &kp LG(V)  &kp F6    &kp F7     &kp F10      &trans             &trans                                                          &kp PRCNT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        WIN_Mouse {
            bindings = <
&none           &none           &msc SCRL_UP    &none            &none                    &none     &kp HOME     &kp END        &none     &none
&none           &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &none  &none      &none  &mkp MB4  &mkp LCLK    &mkp RCLK      &mkp MB5  &none
&kp LEFT_SHIFT  &none           &none           &none            &none  &none      &none  &none     &kp PAGE_UP  &kp PAGE_DOWN  &none     &none
&none           &none           &none           &none            &none  &none      &none  &none                                           &none
            >;
        };

        NUM {
            bindings = <
&none  &none  &none  &none  &none                    &kp KP_MINUS     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS
&none  &none  &none  &none  &none  &none      &none  &kp KP_SLASH     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ASTERISK
&none  &none  &none  &none  &none  &none      &none  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL
&none  &none  &none  &none  &none  &none      &none  &kp BACKSPACE                                                       &kp ENTER
            >;
        };

        BLUETOOTH {
            bindings = <
&none         &none         &none         &none  &none                          &none  &none  &none  &none  &none
&bt BT_CLR    &none         &none         &none  &none  &none      &none        &none  &none  &none  &none  &none
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none  &none      &bootloader  &none  &none  &none  &none  &none
&bt0          &bt1          &bt2          &none  &none  &none      &none        &none                       &trans
            >;
        };
    };
};
